@use "../../common/breakpoints.scss" as breakpoints;

.af-radio {
  &__container {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  &__label-container {
    display: flex;
    flex-direction: column;
    row-gap: calc(4 / var(--font-size-base) * 1rem);
  }

  &__label {
    font-size: calc(18 / var(--font-size-base) * 1rem);
    font-weight: 600;
    color: var(--gray-900);
  }

  &__description {
    font-size: calc(14 / var(--font-size-base) * 1rem);
    font-weight: 400;
    line-height: calc(18 / var(--font-size-base) * 1rem);
    color: var(--gray-light-700);

    @media (width > #{breakpoints.$breakpoint-md}) {
      font-size: calc(16 / var(--font-size-base) * 1rem);
      line-height: calc(20 / var(--font-size-base) * 1rem);
    }
  }

  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;

    & > svg {
      width: 1.75rem;
      height: 1.75rem;
      color: var(--color-axa-apollo);
      fill: var(--color-axa-apollo);
    }

    & &-description {
      display: flex;
      flex-direction: column;
      gap: 0.25rem;
      line-height: 1.25rem;

      & > span:first-child {
        font-size: 1.125rem;
        line-height: 1.4rem;
        color: var(--gray-light-900);
      }

      & > span:not(:first-child) {
        color: var(--gray-light-700);
      }
    }
  }

  &-select--horizontal &__content {
    flex-direction: column;
    gap: 0.5rem;
  }

  &__group-description {
    font-size: 1rem;
    line-height: 1.25rem;
  }

  & ~ .af-input-error {
    gap: 0.5rem;

    &__message {
      line-height: 1.25rem;
    }
  }

  & label {
    display: flex;
    margin: 0;
    border-radius: var(--radius-4);
    align-items: flex-start;
    gap: 0.75rem;
    cursor: pointer;
  }

  &-select label {
    height: 6.4rem;
    padding: 1rem;
    align-items: center;
    box-shadow: 0 0 0 1px var(--box-shadow-color) inset;

    --box-shadow-color: var(--gray);
  }

  &-select--horizontal label {
    position: relative;
    width: 12rem;
    height: auto;
    padding: 1rem;
    flex-direction: column;
    justify-content: flex-start;
    gap: 0;
    text-align: center;

    & .af-radio__icons {
      position: absolute;
      top: 1rem;
      left: 1rem;
    }
  }

  &-select.subgrid label {
    width: inherit;
  }

  &-select[aria-invalid="true"] label {
    --box-shadow-color: var(--red-alert-100);

    box-shadow: 0 0 0 2px var(--box-shadow-color) inset;
  }

  & label input[type="radio"] {
    position: absolute;
    margin-right: 0.5rem;
    opacity: 0;
    cursor: pointer;

    & ~ .af-radio__icons {
      display: flex;
      align-items: center;

      & .af-radio__checked,
      & .af-radio__unchecked {
        width: 1.5rem;
        height: 1.5rem;
        border: solid;
        border-radius: 1rem;
        align-items: center;
      }

      & .af-radio__checked-inner {
        width: calc(12 / var(--font-size-base) * 1rem);
        height: calc(12 / var(--font-size-base) * 1rem);
        border: solid 1px;
        border-radius: 1rem;
        background-color: var(--color-axa-apollo);
      }

      & .af-radio__checked {
        display: none;
      }

      & .af-radio__unchecked {
        color: var(--gray-light-700);
        fill: var(--gray-light-700);
      }
    }
  }

  & label:has(input[type="radio"]:checked) {
    & .af-radio__checked {
      display: flex;
      align-items: center;
      justify-content: center;
      color: var(--color-axa-apollo);
      fill: var(--color-axa-apollo);
    }

    & .af-radio__unchecked {
      display: none;
    }
  }

  &[aria-invalid="true"] {
    *:not(.af-radio__content *) {
      color: var(--red-alert-100);
      fill: var(--red-alert-100);
    }

    & label {
      & input[type="radio"] ~ .af-radio__icons {
        & .af-radio__checked,
        & .af-radio__unchecked {
          color: var(--red-alert-100);
          fill: var(--red-alert-100);
        }

        & .af-radio__checked-inner {
          background-color: var(--red-alert-100);
        }
      }
    }
  }

  &-select[aria-invalid="false"] label:hover {
    --box-shadow-color: var(--color-axa-apollo);

    box-shadow: 0 0 0 1px var(--box-shadow-color) inset;
  }

  & label:has(input[type="radio"]:disabled) {
    cursor: default;

    & input {
      cursor: default;
    }

    & .af-radio__icons {
      & .af-radio__checked,
      & .af-radio__unchecked {
        color: var(--gray-light-500);
        fill: var(--gray-light-500);
      }

      & .af-radio__checked-inner {
        color: var(--gray-light-500);
        background-color: var(--gray-light-500);
        fill: var(--gray-light-500);
      }
    }
  }

  &-select[aria-invalid="false"] label:has(input[type="radio"]) {
    background-color: var(--white);
  }

  &-select[aria-invalid="false"] label:has(input[type="radio"]:checked) {
    background-color: var(--axa-blue-2);
    box-shadow: 0 0 0 2px var(--color-axa-apollo) inset;
  }

  &-select[aria-invalid="false"] label:has(input[type="radio"]:disabled) {
    color: var(--gray-light-500);
    background-color: var(--gray-light-200);
    box-shadow: 0 0 0 1px var(--box-shadow-color) inset;

    --box-shadow-color: var(--gray-light-400);
  }

  & label input[type="radio"]:focus-visible ~ .af-radio__icons {
    outline: 2px solid var(--color-axa-apollo);
    outline-offset: 3px;
  }

  & label:hover:not(:has(input[type="radio"]:disabled)) {
    & .af-radio__unchecked {
      color: var(--color-axa-apollo);
      fill: var(--color-axa-apollo);
    }
  }

  &-select {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    font-family: var(--font-family-base);
    font-style: normal;
    font-weight: 400;
    line-height: 1.25rem;
    color: var(--gray-light-700);

    &--horizontal {
      flex-flow: row wrap;
    }
  }
}
