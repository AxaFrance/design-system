@use "sass:color";
@use "sass:list";
@use "../common/common.agent.scss" as common;

//selector leftBgColor bgColor colorBorder textColor
$typesLite: (
  success common.$color-alertSucces-leftBgColor
    common.$color-alertSucces-bgColor common.$color-alertSucces-colorBorder
    common.$color-alertSucces-textColor,
  info common.$color-alertInfo-leftBgColor common.$color-alertInfo-bgColor
    common.$color-alertInfo-colorBorder common.$color-alertInfo-textColor,
  danger common.$color-alertDanger-leftBgColor common.$color-alertDanger-bgColor
    common.$color-alertDanger-colorBorder common.$color-alertDanger-textColor,
  error common.$color-alertError-leftBgColor common.$color-alertError-bgColor
    common.$color-alertError-colorBorder common.$color-alertError-textColor
);

.af-alert {
  position: relative;
  margin-bottom: 2rem;
  border: 1px solid;
  @each $typeLite in $typesLite {
    &--#{list.nth($typeLite, 1)} {
      border-color: list.nth($typeLite, 4);
      color: list.nth($typeLite, 5);
      background-color: list.nth($typeLite, 3);

      .af-alert__content {
        color: list.nth($typeLite, 5);

        .af-alert__content-left {
          width: 4.5rem;
          background: list.nth($typeLite, 2);
        }
      }

      .af-alert__title {
        &-icon {
          width: 4.5rem;
          color: common.$white;
          background-color: list.nth($typeLite, 2);

          &::after {
            border-left-color: list.nth($typeLite, 2);
          }
        }
      }
    }
  }

  &__title {
    display: flex;
    margin: 0;
    overflow: hidden;
    font-size: 1.1rem;
    color: inherit;

    &-icon {
      position: relative;
      display: flex;
      flex-grow: 0;
      flex-shrink: 0;
      align-items: center;
      justify-content: center;
      font-size: 1.25rem;

      &::after {
        position: absolute;
        right: 0;
        border-top: 1.65rem solid transparent;
        border-bottom: 1.65rem solid transparent;
        border-left: 1.5rem solid transparent;
        transform: translateX(100%);
        content: "";
      }

      &-close {
        position: absolute;
        top: 50%;
        right: 1rem;
        border: 0;
        font-size: 0.75rem;
        color: inherit;
        background: none;
        transform: translateY(-50%);
        cursor: pointer;
      }
    }

    &-text {
      padding: 0.9rem 1.5rem 0.9rem 2.75rem;
      font-weight: 600;
      line-height: 24px;
    }
  }

  &__content {
    display: flex;

    &-left {
      flex-grow: 0;
      flex-shrink: 0;
    }

    .af-alert__content-right {
      padding: 0 1.5rem;
    }
  }
}
